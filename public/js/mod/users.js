// Generated by CoffeeScript 1.9.3

/*
For '/mod/users'

Handles user management.

Dependencies:
	jQuery

Datatable uses
	- Can disable certain columns
	- Can navigate with arrow keys + hit return for easy button calls
	
TODO
	- Make the buttons small icons
	- Add datatable KeyTable support
 */

(function() {
  var $iconLoading, $log, FADE_TIME, dtSettings, logEvent, runAction;

  FADE_TIME = 100;

  $iconLoading = $('.icon-loading');

  $iconLoading.toggle(false);

  dtSettings = {
    order: [[0, 'asc']],
    aLengthMenu: [[25, 50, 75, -1], [25, 50, 75, "All"]],
    iDisplayLength: 25,
    autoWidth: true,
    dom: 'C<"clear">lfrtip',
    colVis: {
      buttonText: 'Show/Hide',
      activate: 'click',
      exclude: [0, 1]
    }
  };

  $(document).ready(function() {
    var table;
    table = $('#DT').DataTable(dtSettings);
  });

  $('.btn-action').click(function() {
    runAction($(this));
  });

  $log = $('#log');

  logEvent = function(text) {
    var d, h, m, s, time;
    d = new Date();
    h = d.getHours();
    m = d.getMinutes();
    s = d.getSeconds();
    h = h < 10 ? '0' + h : h;
    m = m < 10 ? '0' + m : m;
    s = s < 10 ? '0' + s : s;
    time = '<b>[' + h + ':' + m + ':' + s + ']</b> ';
    $log.append('<span>' + time + text + '</span><br>');
    return $log.scrollTop($log[0].scrollHeight);
  };

  logEvent('~~LOG START~~');

  runAction = function($btn) {
    var data;
    $iconLoading.toggle(true);
    data = {
      action: $btn.attr('data-action'),
      userId: parseInt($btn.attr('data-userId'))
    };
    $('.btn-action[data-userId="' + data.userId + '"]').attr('disabled', true);
    $btn.text('...');
    switch (data.action) {
      case 'changeRole':
        data.roleId = parseInt($btn.attr('data-roleId'));
    }
    logEvent('[ACTION_RUN] ' + JSON.stringify(data));
    return $.ajax({
      type: 'POST',
      url: '/mod/users',
      data: JSON.stringify(data),
      contentType: 'application/json',
      success: function(res) {
        $iconLoading.toggle(false);
        if (res.success) {
          logEvent('[ACTION_SUCCESS] action="' + data.action + '" userId=' + data.userId);
          return $btn.text('SUCCESS!');
        } else {
          logEvent('[ACTION_ERROR] action="' + data.action + '" userId=' + data.userId + ' err="' + res.msg + '"');
          $btn.text('ERROR!');
        }
      },
      error: function(err) {
        $iconLoading.toggle(false);
        logEvent('[ACTION_ERROR_LOCAL] action="' + data.action + '" userId=' + data.userId + ' err="' + err + '"');
        $btn.text('ERROR!');
      }
    });
  };

}).call(this);
